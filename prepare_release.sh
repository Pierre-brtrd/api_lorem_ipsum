#!/bin/bash

# Script pour pr√©parer une nouvelle release
# Usage: ./prepare_release.sh <version>

set -e

if [ $# -eq 0 ]; then
    echo "‚ùå Erreur: Version requise"
    echo "Usage: $0 <version>"
    echo "Exemple: $0 0.2.0"
    exit 1
fi

NEW_VERSION="$1"
CURRENT_DATE=$(date +"%Y-%m-%d")

echo "üöÄ Pr√©paration de la release v$NEW_VERSION"

# V√©rifier que nous sommes sur master
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "master" ]; then
    echo "‚ö†Ô∏è  Attention: Vous n'√™tes pas sur la branche master (actuellement sur $CURRENT_BRANCH)"
    read -p "Continuer quand m√™me ? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# V√©rifier que le working directory est propre
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ùå Erreur: Le working directory n'est pas propre"
    echo "Commitez ou stashez vos changements avant de continuer"
    exit 1
fi

# V√©rifier que tous les tests passent
echo "üß™ Ex√©cution des tests..."
cargo test
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur: Les tests √©chouent"
    exit 1
fi

# V√©rifier le formatage et les lints
echo "üîç V√©rification du formatage..."
cargo fmt --check
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur: Le code n'est pas format√© correctement"
    echo "Ex√©cutez: cargo fmt"
    exit 1
fi

echo "üìã V√©rification des lints..."
cargo clippy -- -D warnings
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur: Des warnings clippy sont pr√©sents"
    exit 1
fi

# Mettre √† jour la version dans Cargo.toml
echo "üì¶ Mise √† jour de la version dans Cargo.toml..."
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    sed -i '' "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml
else
    # Linux
    sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml
fi

# V√©rifier que la version a √©t√© mise √† jour
NEW_VERSION_CHECK=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
if [ "$NEW_VERSION_CHECK" != "$NEW_VERSION" ]; then
    echo "‚ùå Erreur: La version n'a pas √©t√© mise √† jour correctement"
    exit 1
fi

# Pr√©parer la section du CHANGELOG
echo "üìã Mise √† jour du CHANGELOG..."

# Cr√©er une sauvegarde du CHANGELOG
cp CHANGELOG.md CHANGELOG.md.bak

# Cr√©er un nouveau CHANGELOG avec la nouvelle version
cat << EOF > CHANGELOG_new.md
# üìã Changelog

Toutes les modifications notables de ce projet seront document√©es dans ce fichier.

Le format est bas√© sur [Keep a Changelog](https://keepachangelog.com/fr/1.0.0/),
et ce projet adh√®re au [Versioning S√©mantique](https://semver.org/lang/fr/).

## [Non publi√©]

### ‚ú® Ajout√©
### üîÑ Modifi√©
### üêõ Corrig√©
### ‚ùå Supprim√©

## [$NEW_VERSION] - $CURRENT_DATE

### ‚ú® Ajout√©
- Nouvelles fonctionnalit√©s √† documenter

### üîÑ Modifi√©
- Changements √† documenter

### üêõ Corrig√©
- Corrections √† documenter

EOF

# Ajouter le reste du CHANGELOG (en sautant la section [Non publi√©] existante)
awk '
    /^## \[Non publi√©\]/ { skip = 1; next }
    /^## \[/ && skip { skip = 0 }
    !skip { print }
' CHANGELOG.md >> CHANGELOG_new.md

mv CHANGELOG_new.md CHANGELOG.md

echo ""
echo "‚úÖ Pr√©paration termin√©e !"
echo ""
echo "üìù Prochaines √©tapes :"
echo "1. √âditez le CHANGELOG.md pour ajouter les vraies notes de release"
echo "2. V√©rifiez les changements avec: git diff"
echo "3. Commitez les changements:"
echo "   git add Cargo.toml CHANGELOG.md"
echo "   git commit -m \"üöÄ Release v$NEW_VERSION\""
echo "4. Poussez vers master:"
echo "   git push origin master"
echo ""
echo "ü§ñ Le workflow GitHub Actions cr√©era automatiquement la release !"
echo ""
echo "‚ö†Ô∏è  N'oubliez pas de mettre √† jour les notes dans CHANGELOG.md avant de commiter !"

# Ouvrir le CHANGELOG dans l'√©diteur par d√©faut (si disponible)
if command -v code &> /dev/null; then
    echo "üìù Ouverture du CHANGELOG dans VS Code..."
    code CHANGELOG.md
elif command -v nano &> /dev/null; then
    echo "üìù Voulez-vous √©diter le CHANGELOG maintenant avec nano ? (y/N)"
    read -p "> " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        nano CHANGELOG.md
    fi
fi
